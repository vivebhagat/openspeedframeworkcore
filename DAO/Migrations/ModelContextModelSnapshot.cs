// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpeedFramework.DAO.Commmon;

namespace DAO.Migrations
{
    [DbContext(typeof(ModelContext))]
    partial class ModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("data")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.CustomPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CustomPages");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.CustomPageLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomPageId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomPageId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CustomPageLinks");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationEntityPropertyId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeInName")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMultiSelect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTransform")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityPropertyId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FieldTypeId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.FieldEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("script")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FieldId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FieldEvents");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.FieldType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FieldTypes");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPreferred")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.FormEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("script")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FormId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FormEvents");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.FormFieldMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FieldId");

                    b.HasIndex("FormId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FormFieldMaps");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("OptionListId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.OptionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FieldId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FieldId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("OptionLists");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.PageLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("linkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("PageLinks");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.IntUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrgId")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("IntUsers");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentOrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int>("Postcode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ParentOrganizationId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.OwnershipEntityAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<int>("IntUserId")
                        .HasColumnType("int");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("eId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("IntUserId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("OwnershipEntityAccesses");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.PageAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LinkId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoleId");

                    b.ToTable("PageAccesses");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.UserDefinedRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DashboardId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DashboardId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("OrgId");

                    b.ToTable("UserDefinedRoles");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.UserDefinedRoleMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoleId");

                    b.ToTable("UserDefinedRoleMaps");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.UserDefinedRoleToUserMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<int>("IntUserId")
                        .HasColumnType("int");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("IntUserId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoleId");

                    b.ToTable("UserDefinedRoleToUserMaps");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.Communication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommunicationTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("eId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CommunicationTemplateId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Communications");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CommunicationTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FromId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CommunicationTemplates");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplateRoleRecieverMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommunicationTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CommunicationTemplateId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ToId");

                    b.ToTable("CommunicationTemplateRoleRecieverMaps");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplateUserRecieverMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommunicationTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CommunicationTemplateId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ToId");

                    b.ToTable("CommunicationTemplateUserRecieverMaps");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.CommunicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CommunicationTypes");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGlobalSearchble")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOwnershipEntity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postfix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ApplicationEntities");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntityAccessExpression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContextAccessExpresion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyAccessExpresion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyApplicationEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PropertyApplicationEntityId");

                    b.ToTable("ApplicationEntityAccessExpressions");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntityProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IncludeInName")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNullable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ApplicationEntityProperties");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationFileTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ResourceUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServerDirectoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationFileTypeId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ServerDirectoryId");

                    b.ToTable("ApplicationFiles");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFileGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ApplicationFileGroups");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ApplicationFileTypes");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.GroupToApplicationFileMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationFileGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationFileTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationFileGroupId");

                    b.HasIndex("ApplicationFileTypeId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("GroupToApplicationFileMappings");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.ServerDirectory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentDirectoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ParentDirectoryId");

                    b.ToTable("ServerDirectories");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Filter.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Filter.FilterField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommonFilterId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("FilterOperator")
                        .HasColumnType("int");

                    b.Property<string>("FilterValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockValue")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CommonFilterId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FieldId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FilterFields");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Filter.FilterList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FilterFieldId")
                        .HasColumnType("int");

                    b.Property<int>("FilterId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FilterFieldId");

                    b.HasIndex("FilterId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FilterLists");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Filter.FilterResultField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommonFilterId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ExcludeInQueryExpression")
                        .HasColumnType("bit");

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewTransformExpression")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CommonFilterId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FilterResultFields");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Scripting.EntityScript", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScriptId")
                        .HasColumnType("int");

                    b.Property<int>("SubmitEventType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ScriptId");

                    b.ToTable("EntityScripts");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Scripting.Script", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Scripts");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.StateMachine.StateAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("StateActions");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.StateMachine.StateActionAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateActionId")
                        .HasColumnType("int");

                    b.Property<int>("UserDefinedRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StateActionId");

                    b.HasIndex("UserDefinedRoleId");

                    b.ToTable("StateActionAccesses");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.StateMachine.StateActionStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationEntityPropertyId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CommunicationTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateActionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserDefinedRoleId")
                        .HasColumnType("int");

                    b.Property<string>("currentValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nextValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEntityPropertyId");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CommunicationTemplateId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StateActionId");

                    b.HasIndex("UserDefinedRoleId");

                    b.ToTable("StateActionStatements");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.Widget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ColSpan")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DashboardId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int>("RowSpan")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WidgetDataId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DashboardId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("WidgetDataId");

                    b.HasIndex("WidgetTemplateId");

                    b.HasIndex("WidgetTypeId");

                    b.ToTable("Widgets");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScriptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ScriptId");

                    b.ToTable("WidgetDatas");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WidgetDataId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetParameterTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("WidgetDataId");

                    b.HasIndex("WidgetParameterTypeId");

                    b.ToTable("WidgetParameters");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetParameterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("WidgetParameterTypes");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("WidgetTemplates");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchieveById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArchieveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchieveById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("WidgetTypes");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.CustomPage", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.CustomPageLink", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.CustomPage", "CustomPage")
                        .WithMany()
                        .HasForeignKey("CustomPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("CustomPage");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Dashboard", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Field", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntityProperty", "ApplicationEntityProperty")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityPropertyId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.FieldType", "FieldType")
                        .WithMany()
                        .HasForeignKey("FieldTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationEntityProperty");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("FieldType");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.FieldEvent", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.Field", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Field");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.FieldType", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Form", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.FormEvent", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Form");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.FormFieldMap", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.Field", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Field");

                    b.Navigation("Form");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Label", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.Option", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.OptionList", "OptionList")
                        .WithMany()
                        .HasForeignKey("OptionListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("OptionList");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.OptionList", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.Field", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Field");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Core.Model.UiSetup.PageLink", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.IntUser", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.Organization", "Org")
                        .WithMany("IntUsers")
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Org");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.Organization", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.Organization", "ParentOrganization")
                        .WithMany()
                        .HasForeignKey("ParentOrganizationId");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("ParentOrganization");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.OwnershipEntityAccess", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "IntUser")
                        .WithMany()
                        .HasForeignKey("IntUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("IntUser");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.PageAccess", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.PageLink", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.UserDefinedRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Link");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.UserDefinedRole", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.Dashboard", "Dashboard")
                        .WithMany()
                        .HasForeignKey("DashboardId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.Organization", "Org")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Dashboard");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.UserDefinedRoleMap", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.UserDefinedRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.UserDefinedRoleToUserMap", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "IntUser")
                        .WithMany()
                        .HasForeignKey("IntUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.UserDefinedRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("IntUser");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.Communication", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplate", "CommunicationTemplate")
                        .WithMany()
                        .HasForeignKey("CommunicationTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CommunicationTemplate");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplate", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Communication.CommunicationType", "CommunicationType")
                        .WithMany()
                        .HasForeignKey("CommunicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CommunicationType");

                    b.Navigation("CreatedBy");

                    b.Navigation("From");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplateRoleRecieverMap", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplate", "CommunicationTemplate")
                        .WithMany()
                        .HasForeignKey("CommunicationTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.UserDefinedRole", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchieveBy");

                    b.Navigation("CommunicationTemplate");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("To");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplateUserRecieverMap", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplate", "CommunicationTemplate")
                        .WithMany()
                        .HasForeignKey("CommunicationTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CommunicationTemplate");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("To");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Communication.CommunicationType", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntityAccessExpression", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "PropertyApplicationEntity")
                        .WithMany()
                        .HasForeignKey("PropertyApplicationEntityId");

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PropertyApplicationEntity");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntityProperty", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFile", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFileType", "ApplicationFileType")
                        .WithMany()
                        .HasForeignKey("ApplicationFileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Custom.FileSystem.ServerDirectory", "ServerDirectory")
                        .WithMany()
                        .HasForeignKey("ServerDirectoryId");

                    b.Navigation("ApplicationFileType");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Owner");

                    b.Navigation("ServerDirectory");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFileGroup", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFileType", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.GroupToApplicationFileMapping", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFileGroup", "ApplicationFileGroup")
                        .WithMany()
                        .HasForeignKey("ApplicationFileGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Custom.FileSystem.ApplicationFileType", "ApplicationFileType")
                        .WithMany()
                        .HasForeignKey("ApplicationFileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationFileGroup");

                    b.Navigation("ApplicationFileType");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.FileSystem.ServerDirectory", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.FileSystem.ServerDirectory", "ParentDirectory")
                        .WithMany()
                        .HasForeignKey("ParentDirectoryId");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("ParentDirectory");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Filter.Filter", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Filter.FilterField", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Filter.Filter", "CommonFilter")
                        .WithMany()
                        .HasForeignKey("CommonFilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.Field", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CommonFilter");

                    b.Navigation("CreatedBy");

                    b.Navigation("Field");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Filter.FilterList", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Filter.FilterField", "FilterField")
                        .WithMany()
                        .HasForeignKey("FilterFieldId");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Filter.Filter", "Filter")
                        .WithMany()
                        .HasForeignKey("FilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Filter");

                    b.Navigation("FilterField");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Filter.FilterResultField", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Filter.Filter", "CommonFilter")
                        .WithMany()
                        .HasForeignKey("CommonFilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CommonFilter");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Scripting.EntityScript", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Scripting.Script", "Script")
                        .WithMany()
                        .HasForeignKey("ScriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Script");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.Scripting.Script", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.StateMachine.StateAction", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntity", "ApplicationEntity")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ApplicationEntity");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.StateMachine.StateActionAccess", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.StateMachine.StateAction", "StateAction")
                        .WithMany()
                        .HasForeignKey("StateActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.UserDefinedRole", "UserDefinedRole")
                        .WithMany()
                        .HasForeignKey("UserDefinedRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("StateAction");

                    b.Navigation("UserDefinedRole");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.StateMachine.StateActionStatement", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Custom.Entity.ApplicationEntityProperty", "ApplicationEntityProperty")
                        .WithMany()
                        .HasForeignKey("ApplicationEntityPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Communication.CommunicationTemplate", "CommunicationTemplate")
                        .WithMany()
                        .HasForeignKey("CommunicationTemplateId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.StateMachine.StateAction", "StateAction")
                        .WithMany()
                        .HasForeignKey("StateActionId");

                    b.HasOne("SpeedFramework.DAO.Model.Access.UserDefinedRole", "UserDefinedRole")
                        .WithMany()
                        .HasForeignKey("UserDefinedRoleId");

                    b.Navigation("ApplicationEntityProperty");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CommunicationTemplate");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("StateAction");

                    b.Navigation("UserDefinedRole");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.Widget", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Core.Model.UiSetup.Dashboard", "Dashboard")
                        .WithMany()
                        .HasForeignKey("DashboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetData", "WidgetData")
                        .WithMany()
                        .HasForeignKey("WidgetDataId");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetTemplate", "WidgetTemplate")
                        .WithMany()
                        .HasForeignKey("WidgetTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetType", "WidgetType")
                        .WithMany()
                        .HasForeignKey("WidgetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Dashboard");

                    b.Navigation("ModifiedBy");

                    b.Navigation("WidgetData");

                    b.Navigation("WidgetTemplate");

                    b.Navigation("WidgetType");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetData", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.Scripting.Script", "Script")
                        .WithMany()
                        .HasForeignKey("ScriptId");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Script");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetParameter", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetData", "WidgetData")
                        .WithMany()
                        .HasForeignKey("WidgetDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetParameterType", "WidgetParameterType")
                        .WithMany()
                        .HasForeignKey("WidgetParameterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("WidgetData");

                    b.Navigation("WidgetParameterType");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetParameterType", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetTemplate", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Custom.UiSetup.Widget.WidgetType", b =>
                {
                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ArchieveBy")
                        .WithMany()
                        .HasForeignKey("ArchieveById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("SpeedFramework.DAO.Model.Access.IntUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ArchieveBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("SpeedFramework.DAO.Model.Access.Organization", b =>
                {
                    b.Navigation("IntUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
